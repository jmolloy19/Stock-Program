# Shamelessly stolen from spotrflow

#
# Generates C++ sources from the .proto files
#
# generate_proto (<SRCS> <HDRS> <DEST> [<ARGN>...])
#
#  SRCS - variable to define with autogenerated source files
#  HDRS - variable to define with autogenerated header files
#  DEST - directory where the source files will be created
#  ARGN - .proto files
#
function(GENERATE_PROTOS SRCS HDRS DEST)

message(STATUS "DEST IS ${DEST}")
  if(NOT ARGN)
    message(SEND_ERROR "Error: GENERATE_PROTOS() called without any proto files")
    return()
  endif()

  if(GENERATE_PROTOS_APPEND_PATH)
    # Create an include path for each file specified
    foreach(FIL ${ARGN})
      get_filename_component(ABS_FIL ${FIL} ABSOLUTE)
      get_filename_component(ABS_PATH ${ABS_FIL} PATH)
      list(FIND _protobuf_include_path ${ABS_PATH} _contains_already)
      if(${_contains_already} EQUAL -1)
          list(APPEND _protobuf_include_path -I ${ABS_PATH})
      endif()
    endforeach()
  else()
    set(_protobuf_include_path -I ${CMAKE_CURRENT_SOURCE_DIR})
  endif()

  if(DEFINED PROTOBUF_IMPORT_DIRS)
    foreach(DIR ${PROTOBUF_IMPORT_DIRS})
      get_filename_component(ABS_PATH ${DIR} ABSOLUTE)
      list(FIND _protobuf_include_path ${ABS_PATH} _contains_already)
      if(${_contains_already} EQUAL -1)
          list(APPEND _protobuf_include_path -I ${ABS_PATH})
      endif()
    endforeach()
  endif()

  set(${SRCS})
  set(${HDRS})
  foreach(FIL ${ARGN})
    get_filename_component(ABS_FIL ${FIL} ABSOLUTE)
    get_filename_component(FIL_WE ${FIL} NAME_WE)

    file(RELATIVE_PATH rel_path_to_proto  ${CMAKE_CURRENT_SOURCE_DIR} ${ABS_FIL})
    get_filename_component(rel_dir_to_proto ${rel_path_to_proto}  DIRECTORY)

    set(proto_hdr ${CMAKE_CURRENT_BINARY_DIR}/${FIL_WE}.pb.h)
    set(proto_src ${CMAKE_CURRENT_BINARY_DIR}/${FIL_WE}.pb.cc)

    list(APPEND ${SRCS} ${proto_src})
    list(APPEND ${HDRS} ${proto_hdr})

    add_custom_command(
      OUTPUT ${proto_src} ${proto_hdr}
      COMMAND ${Protobuf_PROTOC_EXECUTABLE}
      ARGS --proto_path=${PROJECT_SOURCE_DIR}/src/proto --cpp_out=${DEST} ${ABS_FIL}
      DEPENDS ${ABS_FIL}
      COMMENT "Running C++ proto compiler on ${FIL}"
      VERBATIM )

  endforeach()

  set_source_files_properties(${${SRCS}} ${${HDRS}} PROPERTIES GENERATED TRUE)
  set(${SRCS} ${${SRCS}} PARENT_SCOPE)
  set(${HDRS} ${${HDRS}} PARENT_SCOPE)
endfunction()

# By default have GENERATE_PROTOS macro pass -I to protoc
# for each directory where a proto file is referenced.
if(NOT DEFINED GENERATE_PROTOS_APPEND_PATH)
  set(GENERATE_PROTOS_APPEND_PATH TRUE)
endif()
